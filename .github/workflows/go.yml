name: Run Tests

on:
  push:
    branches:
      - master
  pull_request: ~

env:
  GO111MODULE: on

jobs:
  tests:
    name: unit tests
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - windows-latest
        go-version:
          - 1.x
          - 1.16.x
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go Modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      
#      - name: Run go fmt
#        run: diff -u <(echo -n) <(gofmt -d -s .)
      
      - name: Run go vet
        run: go vet ./...
        
      - name: Run Tests
        run: go test -v -race -coverprofile coverage.out -covermode atomic ./...

      - name: Ensure Integration Tests Build
        # don't actually run tests since they hit the live API
        run: go test -v -tags=integration -run=^$ ./test/integration

      - name: Upload Coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.out
          token: ${{ secrets.ASA_CODECOV_TOKEN }}

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v1
        with:
          go-version: '1.16'

      - name: golangci-lint
        uses: golangci/golangci-lint-action@master
        with:
          version: v1.42.1
          skip-go-installation: true
